{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://api.arvados.org/auth/arvados": {
          "description": "View and manage objects"
        },
        "https://api.arvados.org/auth/arvados.readonly": {
          "description": "View objects"
        }
      }
    }
  },
  "basePath": "/arvados/v1/",
  "batchPath": "batch",
  "description": "The API to interact with Arvados.",
  "discoveryVersion": "v1",
  "documentationLink": "http://doc.arvados.org/api/index.html",
  "id": "arvados:v1",
  "kind": "discovery#restDescription",
  "name": "arvados",
  "parameters": {
    "alt": {
      "type": "string",
      "description": "Data format for the response.",
      "default": "json",
      "enum": [
        "json"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json"
      ],
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    }
  },
  "protocol": "rest",
  "resources": {
    "api_client_authorizations": {
      "methods": {
        "get": {
          "id": "arvados.api_client_authorizations.get",
          "path": "api_client_authorizations/{uuid}",
          "httpMethod": "GET",
          "description": "Get a ApiClientAuthorization record by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the ApiClientAuthorization to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "ApiClientAuthorization"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.api_client_authorizations.list",
          "path": "api_client_authorizations",
          "httpMethod": "GET",
          "description": "Retrieve a ApiClientAuthorizationList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "ApiClientAuthorizationList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.api_client_authorizations.create",
          "path": "api_client_authorizations",
          "httpMethod": "POST",
          "description": "Create a new ApiClientAuthorization.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "api_client_authorization": {
                "$ref": "ApiClientAuthorization"
              }
            }
          },
          "response": {
            "$ref": "ApiClientAuthorization"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.api_client_authorizations.update",
          "path": "api_client_authorizations/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing ApiClientAuthorization.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the ApiClientAuthorization to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "api_client_authorization": {
                "$ref": "ApiClientAuthorization"
              }
            }
          },
          "response": {
            "$ref": "ApiClientAuthorization"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.api_client_authorizations.delete",
          "path": "api_client_authorizations/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing ApiClientAuthorization.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the ApiClientAuthorization to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "ApiClientAuthorization"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "create_system_auth": {
          "id": "arvados.api_client_authorizations.create_system_auth",
          "path": "api_client_authorizations/create_system_auth",
          "httpMethod": "POST",
          "description": "Create a token for the system (\"root\") user.",
          "parameters": {
            "scopes": {
              "type": "array",
              "required": false,
              "default": "[\"all\"]",
              "description": "An array of strings defining the scope of resources this token will be allowed to access. Refer to the [scopes reference][] for details.\n\n[scopes reference]: https://doc.arvados.org/api/tokens.html#scopes\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "ApiClientAuthorization"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "current": {
          "id": "arvados.api_client_authorizations.current",
          "path": "api_client_authorizations/current",
          "httpMethod": "GET",
          "description": "Return all metadata for the token used to authorize this request.",
          "parameters": {},
          "response": {
            "$ref": "ApiClientAuthorization"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "authorized_keys": {
      "methods": {
        "get": {
          "id": "arvados.authorized_keys.get",
          "path": "authorized_keys/{uuid}",
          "httpMethod": "GET",
          "description": "Get a AuthorizedKey record by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the AuthorizedKey to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "AuthorizedKey"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.authorized_keys.list",
          "path": "authorized_keys",
          "httpMethod": "GET",
          "description": "Retrieve a AuthorizedKeyList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "AuthorizedKeyList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.authorized_keys.create",
          "path": "authorized_keys",
          "httpMethod": "POST",
          "description": "Create a new AuthorizedKey.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "authorized_key": {
                "$ref": "AuthorizedKey"
              }
            }
          },
          "response": {
            "$ref": "AuthorizedKey"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.authorized_keys.update",
          "path": "authorized_keys/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing AuthorizedKey.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the AuthorizedKey to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "authorized_key": {
                "$ref": "AuthorizedKey"
              }
            }
          },
          "response": {
            "$ref": "AuthorizedKey"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.authorized_keys.delete",
          "path": "authorized_keys/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing AuthorizedKey.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the AuthorizedKey to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "AuthorizedKey"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "collections": {
      "methods": {
        "get": {
          "id": "arvados.collections.get",
          "path": "collections/{uuid}",
          "httpMethod": "GET",
          "description": "Get a Collection record by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Collection to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Show collection even if its `is_trashed` attribute is true.",
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.collections.list",
          "path": "collections",
          "httpMethod": "GET",
          "description": "Retrieve a CollectionList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Include collections whose `is_trashed` attribute is true.",
              "location": "query"
            },
            "include_old_versions": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Include past collection versions.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "CollectionList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.collections.create",
          "path": "collections",
          "httpMethod": "POST",
          "description": "Create a new Collection.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            },
            "replace_files": {
              "type": "object",
              "description": "Add, delete, and replace files and directories with new content\nand/or content from other collections. Refer to the\n[replace_files reference][] for details.\n\n[replace_files reference]: https://doc.arvados.org/api/methods/collections.html#replace_files\n\n",
              "required": false,
              "location": "query",
              "properties": {},
              "additionalProperties": {
                "type": "string"
              }
            },
            "replace_segments": {
              "type": "object",
              "description": "Replace existing block segments in the collection with new segments.\nRefer to the [replace_segments reference][] for details.\n\n[replace_segments reference]: https://doc.arvados.org/api/methods/collections.html#replace_segments\n\n",
              "required": false,
              "location": "query",
              "properties": {},
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "request": {
            "required": true,
            "properties": {
              "collection": {
                "$ref": "Collection"
              }
            }
          },
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.collections.update",
          "path": "collections/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing Collection.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Collection to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "replace_files": {
              "type": "object",
              "description": "Add, delete, and replace files and directories with new content\nand/or content from other collections. Refer to the\n[replace_files reference][] for details.\n\n[replace_files reference]: https://doc.arvados.org/api/methods/collections.html#replace_files\n\n",
              "required": false,
              "location": "query",
              "properties": {},
              "additionalProperties": {
                "type": "string"
              }
            },
            "replace_segments": {
              "type": "object",
              "description": "Replace existing block segments in the collection with new segments.\nRefer to the [replace_segments reference][] for details.\n\n[replace_segments reference]: https://doc.arvados.org/api/methods/collections.html#replace_segments\n\n",
              "required": false,
              "location": "query",
              "properties": {},
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "request": {
            "required": true,
            "properties": {
              "collection": {
                "$ref": "Collection"
              }
            }
          },
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.collections.delete",
          "path": "collections/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing Collection.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Collection to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "provenance": {
          "id": "arvados.collections.provenance",
          "path": "collections/{uuid}/provenance",
          "httpMethod": "GET",
          "description": "Detail the provenance of a given collection.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Collection to query.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "used_by": {
          "id": "arvados.collections.used_by",
          "path": "collections/{uuid}/used_by",
          "httpMethod": "GET",
          "description": "Detail where a given collection has been used.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Collection to query.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "trash": {
          "id": "arvados.collections.trash",
          "path": "collections/{uuid}/trash",
          "httpMethod": "POST",
          "description": "Trash a collection.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Collection to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "untrash": {
          "id": "arvados.collections.untrash",
          "path": "collections/{uuid}/untrash",
          "httpMethod": "POST",
          "description": "Untrash a collection.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Collection to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "computed_permissions": {
      "methods": {
        "list": {
          "id": "arvados.computed_permissions.list",
          "path": "computed_permissions",
          "httpMethod": "GET",
          "description": "Retrieve a ComputedPermissionList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "ComputedPermissionList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        }
      }
    },
    "containers": {
      "methods": {
        "get": {
          "id": "arvados.containers.get",
          "path": "containers/{uuid}",
          "httpMethod": "GET",
          "description": "Get a Container record by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.containers.list",
          "path": "containers",
          "httpMethod": "GET",
          "description": "Retrieve a ContainerList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "ContainerList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.containers.create",
          "path": "containers",
          "httpMethod": "POST",
          "description": "Create a new Container.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "container": {
                "$ref": "Container"
              }
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.containers.update",
          "path": "containers/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing Container.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "container": {
                "$ref": "Container"
              }
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.containers.delete",
          "path": "containers/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing Container.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "auth": {
          "id": "arvados.containers.auth",
          "path": "containers/{uuid}/auth",
          "httpMethod": "GET",
          "description": "Get the API client authorization token associated with this container.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to query.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "lock": {
          "id": "arvados.containers.lock",
          "path": "containers/{uuid}/lock",
          "httpMethod": "POST",
          "description": "Lock a container (for a dispatcher to begin running it).",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "unlock": {
          "id": "arvados.containers.unlock",
          "path": "containers/{uuid}/unlock",
          "httpMethod": "POST",
          "description": "Unlock a container (for a dispatcher to stop running it).",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update_priority": {
          "id": "arvados.containers.update_priority",
          "path": "containers/{uuid}/update_priority",
          "httpMethod": "POST",
          "description": "Recalculate and return the priority of a given container.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "secret_mounts": {
          "id": "arvados.containers.secret_mounts",
          "path": "containers/{uuid}/secret_mounts",
          "httpMethod": "GET",
          "description": "Return secret mount information for the container associated with the API token authorizing this request.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to query.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "current": {
          "id": "arvados.containers.current",
          "path": "containers/current",
          "httpMethod": "GET",
          "description": "Return the container record associated with the API token authorizing this request.",
          "parameters": {},
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "container_requests": {
      "methods": {
        "get": {
          "id": "arvados.container_requests.get",
          "path": "container_requests/{uuid}",
          "httpMethod": "GET",
          "description": "Get a ContainerRequest record by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the ContainerRequest to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Show container request even if its owner project is trashed.",
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "ContainerRequest"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.container_requests.list",
          "path": "container_requests",
          "httpMethod": "GET",
          "description": "Retrieve a ContainerRequestList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Include container requests whose owner project is trashed.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "ContainerRequestList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.container_requests.create",
          "path": "container_requests",
          "httpMethod": "POST",
          "description": "Create a new ContainerRequest.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "container_request": {
                "$ref": "ContainerRequest"
              }
            }
          },
          "response": {
            "$ref": "ContainerRequest"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.container_requests.update",
          "path": "container_requests/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing ContainerRequest.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the ContainerRequest to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "container_request": {
                "$ref": "ContainerRequest"
              }
            }
          },
          "response": {
            "$ref": "ContainerRequest"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.container_requests.delete",
          "path": "container_requests/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing ContainerRequest.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the ContainerRequest to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "ContainerRequest"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "container_status": {
          "id": "arvados.container_requests.container_status",
          "path": "container_requests/{uuid}/container_status",
          "httpMethod": "GET",
          "description": "Return scheduling details for a container request.",
          "parameters": {
            "uuid": {
              "type": "string",
              "required": true,
              "description": "The UUID of the container request to query.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "ContainerRequest"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "credentials": {
      "methods": {
        "get": {
          "id": "arvados.credentials.get",
          "path": "credentials/{uuid}",
          "httpMethod": "GET",
          "description": "Get a Credential record by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Credential to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "Credential"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.credentials.list",
          "path": "credentials",
          "httpMethod": "GET",
          "description": "Retrieve a CredentialList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "CredentialList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.credentials.create",
          "path": "credentials",
          "httpMethod": "POST",
          "description": "Create a new Credential.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "credential": {
                "$ref": "Credential"
              }
            }
          },
          "response": {
            "$ref": "Credential"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.credentials.update",
          "path": "credentials/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing Credential.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Credential to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "credential": {
                "$ref": "Credential"
              }
            }
          },
          "response": {
            "$ref": "Credential"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.credentials.delete",
          "path": "credentials/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing Credential.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Credential to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Credential"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "secret": {
          "id": "arvados.credentials.secret",
          "path": "credentials/{uuid}/secret",
          "httpMethod": "GET",
          "description": "Fetch the secret part of the credential (can only be invoked by running containers).",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Credential to query.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Credential"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "groups": {
      "methods": {
        "get": {
          "id": "arvados.groups.get",
          "path": "groups/{uuid}",
          "httpMethod": "GET",
          "description": "Get a Group record by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Group to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Return group/project even if its `is_trashed` attribute is true.",
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.groups.list",
          "path": "groups",
          "httpMethod": "GET",
          "description": "Retrieve a GroupList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Include items whose `is_trashed` attribute is true.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "GroupList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.groups.create",
          "path": "groups",
          "httpMethod": "POST",
          "description": "Create a new Group.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            },
            "async": {
              "required": false,
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "If true, cluster permission will not be updated immediately, but instead at the next configured update interval."
            }
          },
          "request": {
            "required": true,
            "properties": {
              "group": {
                "$ref": "Group"
              }
            }
          },
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.groups.update",
          "path": "groups/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing Group.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Group to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "async": {
              "required": false,
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "If true, cluster permission will not be updated immediately, but instead at the next configured update interval."
            }
          },
          "request": {
            "required": true,
            "properties": {
              "group": {
                "$ref": "Group"
              }
            }
          },
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.groups.delete",
          "path": "groups/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing Group.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Group to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "contents": {
          "id": "arvados.groups.contents",
          "path": "groups/contents",
          "httpMethod": "GET",
          "description": "List objects that belong to a group.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Include items whose `is_trashed` attribute is true.",
              "location": "query"
            },
            "uuid": {
              "type": "string",
              "required": false,
              "default": "",
              "description": "If given, limit the listing to objects owned by the\nuser or group with this UUID.",
              "location": "query"
            },
            "recursive": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, include contents from child groups recursively.",
              "location": "query"
            },
            "include": {
              "type": "array",
              "required": false,
              "description": "An array of referenced objects to include in the `included` field of the response. Supported values in the array are:\n\n  * `\"container_uuid\"`\n  * `\"owner_uuid\"`\n  * `\"collection_uuid\"`\n\n",
              "location": "query"
            },
            "include_old_versions": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, include past versions of collections in the listing.",
              "location": "query"
            },
            "exclude_home_project": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, exclude contents of the user's home project from the listing.\nCalling this method with this flag set is how clients enumerate objects shared\nwith the current user.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "shared": {
          "id": "arvados.groups.shared",
          "path": "groups/shared",
          "httpMethod": "GET",
          "description": "List groups that the current user can access via permission links.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Include items whose `is_trashed` attribute is true.",
              "location": "query"
            },
            "include": {
              "type": "string",
              "required": false,
              "description": "A string naming referenced objects to include in the `included` field of the response. Supported values are:\n\n  * `\"owner_uuid\"`\n\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "trash": {
          "id": "arvados.groups.trash",
          "path": "groups/{uuid}/trash",
          "httpMethod": "POST",
          "description": "Trash a group.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Group to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "untrash": {
          "id": "arvados.groups.untrash",
          "path": "groups/{uuid}/untrash",
          "httpMethod": "POST",
          "description": "Untrash a group.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Group to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "keep_services": {
      "methods": {
        "get": {
          "id": "arvados.keep_services.get",
          "path": "keep_services/{uuid}",
          "httpMethod": "GET",
          "description": "Get a KeepService record by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the KeepService to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "KeepService"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.keep_services.list",
          "path": "keep_services",
          "httpMethod": "GET",
          "description": "Retrieve a KeepServiceList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "KeepServiceList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.keep_services.create",
          "path": "keep_services",
          "httpMethod": "POST",
          "description": "Create a new KeepService.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "keep_service": {
                "$ref": "KeepService"
              }
            }
          },
          "response": {
            "$ref": "KeepService"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.keep_services.update",
          "path": "keep_services/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing KeepService.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the KeepService to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "keep_service": {
                "$ref": "KeepService"
              }
            }
          },
          "response": {
            "$ref": "KeepService"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.keep_services.delete",
          "path": "keep_services/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing KeepService.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the KeepService to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "KeepService"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "accessible": {
          "id": "arvados.keep_services.accessible",
          "path": "keep_services/accessible",
          "httpMethod": "GET",
          "description": "List Keep services that the current client can access.",
          "parameters": {},
          "response": {
            "$ref": "KeepService"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "links": {
      "methods": {
        "get": {
          "id": "arvados.links.get",
          "path": "links/{uuid}",
          "httpMethod": "GET",
          "description": "Get a Link record by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Link to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "Link"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.links.list",
          "path": "links",
          "httpMethod": "GET",
          "description": "Retrieve a LinkList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "LinkList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.links.create",
          "path": "links",
          "httpMethod": "POST",
          "description": "Create a new Link.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "link": {
                "$ref": "Link"
              }
            }
          },
          "response": {
            "$ref": "Link"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.links.update",
          "path": "links/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing Link.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Link to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "link": {
                "$ref": "Link"
              }
            }
          },
          "response": {
            "$ref": "Link"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.links.delete",
          "path": "links/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing Link.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Link to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Link"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "get_permissions": {
          "id": "arvados.links.get_permissions",
          "path": "permissions/{uuid}",
          "httpMethod": "GET",
          "description": "List permissions granted on an Arvados object.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Link to query.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Link"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "logs": {
      "methods": {
        "get": {
          "id": "arvados.logs.get",
          "path": "logs/{uuid}",
          "httpMethod": "GET",
          "description": "Get a Log record by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Log to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "Log"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.logs.list",
          "path": "logs",
          "httpMethod": "GET",
          "description": "Retrieve a LogList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "LogList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.logs.create",
          "path": "logs",
          "httpMethod": "POST",
          "description": "Create a new Log.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "log": {
                "$ref": "Log"
              }
            }
          },
          "response": {
            "$ref": "Log"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.logs.update",
          "path": "logs/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing Log.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Log to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "log": {
                "$ref": "Log"
              }
            }
          },
          "response": {
            "$ref": "Log"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.logs.delete",
          "path": "logs/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing Log.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Log to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Log"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "users": {
      "methods": {
        "get": {
          "id": "arvados.users.get",
          "path": "users/{uuid}",
          "httpMethod": "GET",
          "description": "Get a User record by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the User to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.users.list",
          "path": "users",
          "httpMethod": "GET",
          "description": "Retrieve a UserList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "UserList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.users.create",
          "path": "users",
          "httpMethod": "POST",
          "description": "Create a new User.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "user": {
                "$ref": "User"
              }
            }
          },
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.users.update",
          "path": "users/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing User.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the User to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not try to update the user on any other clusters in the federation,\nonly the cluster that received the request.\nYou must be an administrator to use this flag.",
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "user": {
                "$ref": "User"
              }
            }
          },
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.users.delete",
          "path": "users/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing User.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the User to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "current": {
          "id": "arvados.users.current",
          "path": "users/current",
          "httpMethod": "GET",
          "description": "Return the user record associated with the API token authorizing this request.",
          "parameters": {},
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "system": {
          "id": "arvados.users.system",
          "path": "users/system",
          "httpMethod": "GET",
          "description": "Return this cluster's system (\"root\") user record.",
          "parameters": {},
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "activate": {
          "id": "arvados.users.activate",
          "path": "users/{uuid}/activate",
          "httpMethod": "POST",
          "description": "Set the `is_active` flag on a user record.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the User to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "setup": {
          "id": "arvados.users.setup",
          "path": "users/setup",
          "httpMethod": "POST",
          "description": "Convenience method to \"fully\" set up a user record with a virtual machine login and notification email.",
          "parameters": {
            "uuid": {
              "type": "string",
              "required": false,
              "description": "UUID of an existing user record to set up.",
              "location": "query"
            },
            "user": {
              "type": "object",
              "required": false,
              "description": "Attributes of a new user record to set up.",
              "location": "query"
            },
            "repo_name": {
              "type": "string",
              "required": false,
              "description": "This parameter is obsolete and ignored.",
              "location": "query"
            },
            "vm_uuid": {
              "type": "string",
              "required": false,
              "description": "If given, setup creates a login link to allow this user to access the Arvados virtual machine with this UUID.",
              "location": "query"
            },
            "send_notification_email": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, send an email to the user notifying them they can now access this Arvados cluster.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "unsetup": {
          "id": "arvados.users.unsetup",
          "path": "users/{uuid}/unsetup",
          "httpMethod": "POST",
          "description": "Unset a user's active flag and delete associated records.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the User to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "merge": {
          "id": "arvados.users.merge",
          "path": "users/merge",
          "httpMethod": "POST",
          "description": "Transfer ownership of one user's data to another.",
          "parameters": {
            "new_owner_uuid": {
              "type": "string",
              "required": true,
              "description": "UUID of the user or group that will take ownership of data owned by the old user.",
              "location": "query"
            },
            "new_user_token": {
              "type": "string",
              "required": false,
              "description": "Valid API token for the user receiving ownership. If you use this option, it takes ownership of data owned by the user making the request.",
              "location": "query"
            },
            "redirect_to_new_user": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, authorization attempts for the old user will be redirected to the new user.",
              "location": "query"
            },
            "old_user_uuid": {
              "type": "string",
              "required": false,
              "description": "UUID of the user whose ownership is being transferred to `new_owner_uuid`. You must be an admin to use this option.",
              "location": "query"
            },
            "new_user_uuid": {
              "type": "string",
              "required": false,
              "description": "UUID of the user receiving ownership. You must be an admin to use this option.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "user_agreements": {
      "methods": {
        "get": {
          "id": "arvados.user_agreements.get",
          "path": "user_agreements/{uuid}",
          "httpMethod": "GET",
          "description": "Get a UserAgreement record by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the UserAgreement to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "UserAgreement"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.user_agreements.list",
          "path": "user_agreements",
          "httpMethod": "GET",
          "description": "Retrieve a UserAgreementList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "UserAgreementList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.user_agreements.create",
          "path": "user_agreements",
          "httpMethod": "POST",
          "description": "Create a new UserAgreement.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "user_agreement": {
                "$ref": "UserAgreement"
              }
            }
          },
          "response": {
            "$ref": "UserAgreement"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.user_agreements.update",
          "path": "user_agreements/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing UserAgreement.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the UserAgreement to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "user_agreement": {
                "$ref": "UserAgreement"
              }
            }
          },
          "response": {
            "$ref": "UserAgreement"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.user_agreements.delete",
          "path": "user_agreements/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing UserAgreement.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the UserAgreement to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "UserAgreement"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "signatures": {
          "id": "arvados.user_agreements.signatures",
          "path": "user_agreements/signatures",
          "httpMethod": "GET",
          "description": "List all user agreement signature links from a user.",
          "parameters": {},
          "response": {
            "$ref": "UserAgreement"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "sign": {
          "id": "arvados.user_agreements.sign",
          "path": "user_agreements/sign",
          "httpMethod": "POST",
          "description": "Create a signature link from the current user for a given user agreement.",
          "parameters": {},
          "response": {
            "$ref": "UserAgreement"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "virtual_machines": {
      "methods": {
        "get": {
          "id": "arvados.virtual_machines.get",
          "path": "virtual_machines/{uuid}",
          "httpMethod": "GET",
          "description": "Get a VirtualMachine record by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the VirtualMachine to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "VirtualMachine"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.virtual_machines.list",
          "path": "virtual_machines",
          "httpMethod": "GET",
          "description": "Retrieve a VirtualMachineList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "VirtualMachineList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.virtual_machines.create",
          "path": "virtual_machines",
          "httpMethod": "POST",
          "description": "Create a new VirtualMachine.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "virtual_machine": {
                "$ref": "VirtualMachine"
              }
            }
          },
          "response": {
            "$ref": "VirtualMachine"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.virtual_machines.update",
          "path": "virtual_machines/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing VirtualMachine.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the VirtualMachine to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "virtual_machine": {
                "$ref": "VirtualMachine"
              }
            }
          },
          "response": {
            "$ref": "VirtualMachine"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.virtual_machines.delete",
          "path": "virtual_machines/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing VirtualMachine.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the VirtualMachine to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "VirtualMachine"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "logins": {
          "id": "arvados.virtual_machines.logins",
          "path": "virtual_machines/{uuid}/logins",
          "httpMethod": "GET",
          "description": "List login permission links for a given virtual machine.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the VirtualMachine to query.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "VirtualMachine"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "get_all_logins": {
          "id": "arvados.virtual_machines.get_all_logins",
          "path": "virtual_machines/get_all_logins",
          "httpMethod": "GET",
          "description": "List login permission links for all virtual machines.",
          "parameters": {},
          "response": {
            "$ref": "VirtualMachine"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "workflows": {
      "methods": {
        "get": {
          "id": "arvados.workflows.get",
          "path": "workflows/{uuid}",
          "httpMethod": "GET",
          "description": "Get a Workflow record by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Workflow to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "Workflow"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.workflows.list",
          "path": "workflows",
          "httpMethod": "GET",
          "description": "Retrieve a WorkflowList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n  * `\"exact\"`: The response will include an `items_available` field that\n    counts the number of objects that matched this search criteria,\n    including ones not included in `items`.\n\n  * `\"none\"`: The response will not include an `items_avaliable`\n    field. This improves performance by returning a result as soon as enough\n    `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "WorkflowList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.workflows.create",
          "path": "workflows",
          "httpMethod": "POST",
          "description": "Create a new Workflow.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "workflow": {
                "$ref": "Workflow"
              }
            }
          },
          "response": {
            "$ref": "Workflow"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.workflows.update",
          "path": "workflows/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing Workflow.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Workflow to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "workflow": {
                "$ref": "Workflow"
              }
            }
          },
          "response": {
            "$ref": "Workflow"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.workflows.delete",
          "path": "workflows/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing Workflow.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Workflow to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Workflow"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "configs": {
      "methods": {
        "get": {
          "id": "arvados.configs.get",
          "path": "config",
          "httpMethod": "GET",
          "description": "Get this cluster's public configuration settings.",
          "parameters": {},
          "parameterOrder": [],
          "response": {},
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        }
      }
    },
    "vocabularies": {
      "methods": {
        "get": {
          "id": "arvados.vocabularies.get",
          "path": "vocabulary",
          "httpMethod": "GET",
          "description": "Get this cluster's configured vocabulary definition.\n\nRefer to [metadata vocabulary documentation][] for details.\n\n[metadata vocabulary documentation]: https://doc.aravdos.org/admin/metadata-vocabulary.html\n\n",
          "parameters": {},
          "parameterOrder": [],
          "response": {},
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        }
      }
    },
    "sys": {
      "methods": {
        "get": {
          "id": "arvados.sys.trash_sweep",
          "path": "sys/trash_sweep",
          "httpMethod": "POST",
          "description": "Run scheduled data trash and sweep operations across this cluster's Keep services.",
          "parameters": {},
          "parameterOrder": [],
          "response": {},
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        }
      }
    }
  },
  "revision": "20250402",
  "schemas": {
    "ApiClientAuthorizationList": {
      "id": "ApiClientAuthorizationList",
      "description": "A list of ApiClientAuthorization objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#apiClientAuthorizationList.",
          "default": "arvados#apiClientAuthorizationList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching ApiClientAuthorization objects.",
          "items": {
            "$ref": "ApiClientAuthorization"
          }
        }
      }
    },
    "ApiClientAuthorization": {
      "id": "ApiClientAuthorization",
      "description": "Arvados API client authorization token\n\nThis resource represents an API token a user may use to authenticate an\nArvados API request.",
      "type": "object",
      "uuidPrefix": "gj3su",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "api_token": {
          "description": "The secret token that can be used to authorize Arvados API requests.",
          "type": "string"
        },
        "created_by_ip_address": {
          "description": "The IP address of the client that created this token.",
          "type": "string"
        },
        "last_used_by_ip_address": {
          "description": "The IP address of the client that last used this token.",
          "type": "string"
        },
        "last_used_at": {
          "description": "The last time this token was used to authorize a request. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "expires_at": {
          "description": "The time after which this token is no longer valid for authorization. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "created_at": {
          "description": "The time this API client authorization was created. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "scopes": {
          "description": "An array of strings identifying HTTP methods and API paths this token is\nauthorized to use. Refer to the [scopes reference][] for details.\n\n[scopes reference]: https://doc.arvados.org/api/tokens.html#scopes\n\n",
          "type": "Array"
        },
        "uuid": {
          "type": "string",
          "description": "This API client authorization's Arvados UUID, like `zzzzz-gj3su-12345abcde67890`."
        }
      }
    },
    "AuthorizedKeyList": {
      "id": "AuthorizedKeyList",
      "description": "A list of AuthorizedKey objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#authorizedKeyList.",
          "default": "arvados#authorizedKeyList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching AuthorizedKey objects.",
          "items": {
            "$ref": "AuthorizedKey"
          }
        }
      }
    },
    "AuthorizedKey": {
      "id": "AuthorizedKey",
      "description": "Arvados authorized public key\n\nThis resource represents a public key a user may use to authenticate themselves\nto services on the cluster. Its primary use today is to store SSH keys for\nvirtual machines (\"shell nodes\"). It may be extended to store other keys in\nthe future.",
      "type": "object",
      "uuidPrefix": "fngyi",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This authorized key's Arvados UUID, like `zzzzz-fngyi-12345abcde67890`."
        },
        "owner_uuid": {
          "description": "The UUID of the user or group that owns this authorized key.",
          "type": "string"
        },
        "modified_by_user_uuid": {
          "description": "The UUID of the user that last updated this authorized key.",
          "type": "string"
        },
        "modified_at": {
          "description": "The time this authorized key was last updated. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "name": {
          "description": "The name of this authorized key assigned by a user.",
          "type": "string"
        },
        "key_type": {
          "description": "A string identifying what type of service uses this key. Supported values are:\n\n  * `\"SSH\"`\n\n",
          "type": "string"
        },
        "authorized_user_uuid": {
          "description": "The UUID of the Arvados user that is authorized by this key.",
          "type": "string"
        },
        "public_key": {
          "description": "The full public key, in the format referenced by `key_type`.",
          "type": "text"
        },
        "expires_at": {
          "description": "The time after which this key is no longer valid for authorization. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "created_at": {
          "description": "The time this authorized key was created. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        }
      }
    },
    "CollectionList": {
      "id": "CollectionList",
      "description": "A list of Collection objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#collectionList.",
          "default": "arvados#collectionList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching Collection objects.",
          "items": {
            "$ref": "Collection"
          }
        }
      }
    },
    "Collection": {
      "id": "Collection",
      "description": "Arvados data collection\n\nA collection describes how a set of files is stored in data blocks in Keep,\nalong with associated metadata.",
      "type": "object",
      "uuidPrefix": "4zz18",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "owner_uuid": {
          "description": "The UUID of the user or group that owns this collection.",
          "type": "string"
        },
        "created_at": {
          "description": "The time this collection was created. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "description": "The UUID of the user that last updated this collection.",
          "type": "string"
        },
        "modified_at": {
          "description": "The time this collection was last updated. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "portable_data_hash": {
          "description": "The portable data hash of this collection. This string provides a unique\nand stable reference to these contents.",
          "type": "string"
        },
        "replication_desired": {
          "description": "The number of copies that should be made for data in this collection.",
          "type": "integer"
        },
        "replication_confirmed_at": {
          "description": "The last time the cluster confirmed that it met `replication_confirmed`\nfor this collection. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "replication_confirmed": {
          "description": "The number of copies of data in this collection that the cluster has confirmed\nexist in storage.",
          "type": "integer"
        },
        "uuid": {
          "type": "string",
          "description": "This collection's Arvados UUID, like `zzzzz-4zz18-12345abcde67890`."
        },
        "manifest_text": {
          "description": "The manifest text that describes how files are constructed from data blocks\nin this collection. Refer to the [manifest format][] reference for details.\n\n[manifest format]: https://doc.arvados.org/architecture/manifest-format.html\n\n",
          "type": "text"
        },
        "name": {
          "description": "The name of this collection assigned by a user.",
          "type": "string"
        },
        "description": {
          "description": "A longer HTML description of this collection assigned by a user.\nAllowed HTML tags are `a`, `b`, `blockquote`, `br`, `code`,\n`del`, `dd`, `dl`, `dt`, `em`, `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `hr`,\n`i`, `img`, `kbd`, `li`, `ol`, `p`, `pre`,\n`s`, `section`, `span`, `strong`, `sub`, `sup`, and `ul`.",
          "type": "string"
        },
        "properties": {
          "description": "A hash of arbitrary metadata for this collection.\nSome keys may be reserved by Arvados or defined by a configured vocabulary.\nRefer to the [metadata properties reference][] for details.\n\n[metadata properties reference]: https://doc.arvados.org/api/properties.html\n\n",
          "type": "Hash"
        },
        "delete_at": {
          "description": "The time this collection will be permanently deleted. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "trash_at": {
          "description": "The time this collection will be trashed. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "is_trashed": {
          "description": "A boolean flag to indicate whether or not this collection is trashed.",
          "type": "boolean"
        },
        "storage_classes_desired": {
          "description": "An array of strings identifying the storage class(es) that should be used\nfor data in this collection. Storage classes are configured by the cluster administrator.",
          "type": "Array"
        },
        "storage_classes_confirmed": {
          "description": "An array of strings identifying the storage class(es) the cluster has\nconfirmed have a copy of this collection's data.",
          "type": "Array"
        },
        "storage_classes_confirmed_at": {
          "description": "The last time the cluster confirmed that data was stored on the storage\nclass(es) in `storage_classes_confirmed`. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "current_version_uuid": {
          "description": "The UUID of the current version of this collection.",
          "type": "string"
        },
        "version": {
          "description": "An integer that counts which version of a collection this record\nrepresents. Refer to [collection versioning][] for details. This attribute is\nread-only.\n\n[collection versioning]: https://doc.arvados.org/user/topics/collection-versioning.html\n\n",
          "type": "integer"
        },
        "preserve_version": {
          "description": "A boolean flag to indicate whether this specific version of this collection\nshould be persisted in cluster storage.",
          "type": "boolean"
        },
        "file_count": {
          "description": "The number of files represented in this collection's `manifest_text`.\nThis attribute is read-only.",
          "type": "integer"
        },
        "file_size_total": {
          "description": "The total size in bytes of files represented in this collection's `manifest_text`.\nThis attribute is read-only.",
          "type": "integer"
        }
      }
    },
    "ComputedPermissionList": {
      "id": "ComputedPermissionList",
      "description": "A list of ComputedPermission objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#computedPermissionList.",
          "default": "arvados#computedPermissionList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching ComputedPermission objects.",
          "items": {
            "$ref": "ComputedPermission"
          }
        }
      }
    },
    "ComputedPermission": {
      "id": "ComputedPermission",
      "description": "Arvados computed permission\n\nComputed permissions do not correspond directly to any Arvados resource, but\nprovide a simple way to query the entire graph of permissions granted to\nusers and groups.",
      "type": "object",
      "properties": {
        "user_uuid": {
          "description": "The UUID of the Arvados user who has this permission.",
          "type": "string"
        },
        "target_uuid": {
          "description": "The UUID of the Arvados object the user has access to.",
          "type": "string"
        },
        "perm_level": {
          "description": "A string representing the user's level of access to the target object.\nPossible values are:\n\n  * `\"can_read\"`\n  * `\"can_write\"`\n  * `\"can_manage\"`\n\n",
          "type": "string"
        }
      }
    },
    "ContainerList": {
      "id": "ContainerList",
      "description": "A list of Container objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#containerList.",
          "default": "arvados#containerList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching Container objects.",
          "items": {
            "$ref": "Container"
          }
        }
      }
    },
    "Container": {
      "id": "Container",
      "description": "Arvados container record\n\nA container represents compute work that has been or should be dispatched,\nalong with its results. A container can satisfy one or more container requests.",
      "type": "object",
      "uuidPrefix": "dz642",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This container's Arvados UUID, like `zzzzz-dz642-12345abcde67890`."
        },
        "owner_uuid": {
          "description": "The UUID of the user or group that owns this container.",
          "type": "string"
        },
        "created_at": {
          "description": "The time this container was created. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "modified_at": {
          "description": "The time this container was last updated. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "description": "The UUID of the user that last updated this container.",
          "type": "string"
        },
        "state": {
          "description": "A string representing the container's current execution status. Possible\nvalues are:\n\n  * `\"Queued\"` --- This container has not been dispatched yet.\n  * `\"Locked\"` --- A dispatcher has claimed this container in preparation to run it.\n  * `\"Running\"` --- A dispatcher is running this container.\n  * `\"Cancelled\"` --- Container execution has been cancelled by user request.\n  * `\"Complete\"` --- A dispatcher ran this container to completion and recorded the results.\n\n",
          "type": "string"
        },
        "started_at": {
          "description": " The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "finished_at": {
          "description": " The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "log": {
          "description": "The portable data hash of the Arvados collection that contains this\ncontainer's logs.",
          "type": "string"
        },
        "environment": {
          "description": "A hash of string keys and values that defines the environment variables\nfor the dispatcher to set when it executes this container.",
          "type": "Hash"
        },
        "cwd": {
          "description": "A string that the defines the working directory that the dispatcher should\nuse when it executes the command inside this container.",
          "type": "string"
        },
        "command": {
          "description": "An array of strings that defines the command that the dispatcher should\nexecute inside this container.",
          "type": "Array"
        },
        "output_path": {
          "description": "A string that defines the file or directory path where the command\nwrites output that should be saved from this container.",
          "type": "string"
        },
        "mounts": {
          "description": "A hash where each key names a directory inside this container, and its\nvalue is an object that defines the mount source for that directory. Refer\nto the [mount types reference][] for details.\n\n[mount types reference]: https://doc.arvados.org/api/methods/containers.html#mount_types\n\n",
          "type": "Hash"
        },
        "runtime_constraints": {
          "description": "A hash that identifies compute resources this container requires to run\nsuccessfully. See the [runtime constraints reference][] for details.\n\n[runtime constraints reference]: https://doc.arvados.org/api/methods/containers.html#runtime_constraints\n\n",
          "type": "Hash"
        },
        "output": {
          "description": "The portable data hash of the Arvados collection that contains this\ncontainer's output file(s).",
          "type": "string"
        },
        "container_image": {
          "description": "The portable data hash of the Arvados collection that contains the image\nto use for this container.",
          "type": "string"
        },
        "progress": {
          "description": "A float between 0.0 and 1.0 (inclusive) that represents the container's\nexecution progress. This attribute is not implemented yet.",
          "type": "float"
        },
        "priority": {
          "description": "An integer between 0 and 1000 (inclusive) that represents this container's\nscheduling priority. 0 represents a request to be cancelled. Higher\nvalues represent higher priority. Refer to the [priority reference][] for details.\n\n[priority reference]: https://doc.arvados.org/api/methods/container_requests.html#priority\n\n",
          "type": "integer"
        },
        "exit_code": {
          "description": "An integer that records the Unix exit code of the `command` from a\nfinished container.",
          "type": "integer"
        },
        "auth_uuid": {
          "description": "The UUID of the Arvados API client authorization token that a dispatcher\nshould use to set up this container. This token is automatically created by\nArvados and this attribute automatically assigned unless a container is\ncreated with `runtime_token`.",
          "type": "string"
        },
        "locked_by_uuid": {
          "description": "The UUID of the Arvados API client authorization token that successfully\nlocked this container in preparation to execute it.",
          "type": "string"
        },
        "scheduling_parameters": {
          "description": "A hash of scheduling parameters that should be passed to the underlying\ndispatcher when this container is run.\nSee the [scheduling parameters reference][] for details.\n\n[scheduling parameters reference]: https://doc.arvados.org/api/methods/containers.html#scheduling_parameters\n\n",
          "type": "Hash"
        },
        "runtime_status": {
          "description": "A hash with status updates from a running container.\nRefer to the [runtime status reference][] for details.\n\n[runtime status reference]: https://doc.arvados.org/api/methods/containers.html#runtime_status\n\n",
          "type": "Hash"
        },
        "runtime_user_uuid": {
          "description": "The UUID of the Arvados user associated with the API client authorization\ntoken used to run this container.",
          "type": "text"
        },
        "runtime_auth_scopes": {
          "description": "The `scopes` from the API client authorization token used to run this container.",
          "type": "Array"
        },
        "lock_count": {
          "description": "The number of times this container has been locked by a dispatcher. This\nmay be greater than 1 if a dispatcher locks a container but then execution is\ninterrupted for any reason.",
          "type": "integer"
        },
        "gateway_address": {
          "description": "A string with the address of the Arvados gateway server, in `HOST:PORT`\nformat. This is for internal use only.",
          "type": "string"
        },
        "interactive_session_started": {
          "description": "This flag is set true if any user starts an interactive shell inside the\nrunning container.",
          "type": "boolean"
        },
        "output_storage_classes": {
          "description": "An array of strings identifying the storage class(es) that should be set\non the output collection of this container. Storage classes are configured by\nthe cluster administrator.",
          "type": "Array"
        },
        "output_properties": {
          "description": "A hash of arbitrary metadata to set on the output collection of this container.\nSome keys may be reserved by Arvados or defined by a configured vocabulary.\nRefer to the [metadata properties reference][] for details.\n\n[metadata properties reference]: https://doc.arvados.org/api/properties.html\n\n",
          "type": "Hash"
        },
        "cost": {
          "description": "A float with the estimated cost of the cloud instance used to run this\ncontainer. The value is `0` if cost estimation is not available on this cluster.",
          "type": "float"
        },
        "subrequests_cost": {
          "description": "A float with the estimated cost of all cloud instances used to run this\ncontainer and all its subrequests. The value is `0` if cost estimation is not\navailable on this cluster.",
          "type": "float"
        },
        "output_glob": {
          "description": "An array of strings of shell-style glob patterns that define which file(s)\nand subdirectory(ies) under the `output_path` directory should be recorded in\nthe container's final output. Refer to the [glob patterns reference][] for details.\n\n[glob patterns reference]: https://doc.arvados.org/api/methods/containers.html#glob_patterns\n\n",
          "type": "Array"
        },
        "service": {
          "description": "A boolean flag. If set, it informs the system that this is a long-running container\nthat functions as a system service or web app, rather than a once-through batch operation.",
          "type": "boolean"
        },
        "published_ports": {
          "description": "A hash where keys are numeric TCP ports on the container which expose HTTP services.  Arvados\nwill proxy HTTP requests to these ports.  Values are hashes with the following keys:\n\n  * `\"access\"` --- One of 'private' or 'public' indicating if an Arvados API token is required to access the endpoint.\n  * `\"label\"` --- A human readable label describing the service, for display in Workbench.\n  * `\"initial_path\"` --- The relative path that should be included when constructing the URL that will be presented to the user in Workbench.",
          "type": "jsonb"
        }
      }
    },
    "ContainerRequestList": {
      "id": "ContainerRequestList",
      "description": "A list of ContainerRequest objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#containerRequestList.",
          "default": "arvados#containerRequestList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching ContainerRequest objects.",
          "items": {
            "$ref": "ContainerRequest"
          }
        }
      }
    },
    "ContainerRequest": {
      "id": "ContainerRequest",
      "description": "Arvados container request\n\nA container request represents a user's request that Arvados do some compute\nwork, along with full details about what work should be done. Arvados will\nattempt to fulfill the request by mapping it to a matching container record,\nrunning the work on demand if necessary.",
      "type": "object",
      "uuidPrefix": "xvhdp",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This container request's Arvados UUID, like `zzzzz-xvhdp-12345abcde67890`."
        },
        "owner_uuid": {
          "description": "The UUID of the user or group that owns this container request.",
          "type": "string"
        },
        "created_at": {
          "description": "The time this container request was created. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "modified_at": {
          "description": "The time this container request was last updated. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "description": "The UUID of the user that last updated this container request.",
          "type": "string"
        },
        "name": {
          "description": "The name of this container request assigned by a user.",
          "type": "string"
        },
        "description": {
          "description": "A longer HTML description of this container request assigned by a user.\nAllowed HTML tags are `a`, `b`, `blockquote`, `br`, `code`,\n`del`, `dd`, `dl`, `dt`, `em`, `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `hr`,\n`i`, `img`, `kbd`, `li`, `ol`, `p`, `pre`,\n`s`, `section`, `span`, `strong`, `sub`, `sup`, and `ul`.",
          "type": "text"
        },
        "properties": {
          "description": "A hash of arbitrary metadata for this container request.\nSome keys may be reserved by Arvados or defined by a configured vocabulary.\nRefer to the [metadata properties reference][] for details.\n\n[metadata properties reference]: https://doc.arvados.org/api/properties.html\n\n",
          "type": "Hash"
        },
        "state": {
          "description": "A string indicating where this container request is in its lifecycle.\nPossible values are:\n\n  * `\"Uncommitted\"` --- The container request has not been finalized and can still be edited.\n  * `\"Committed\"` --- The container request is ready to be fulfilled.\n  * `\"Final\"` --- The container request has been fulfilled or cancelled.\n\n",
          "type": "string"
        },
        "requesting_container_uuid": {
          "description": "The UUID of the container that created this container request, if any.",
          "type": "string"
        },
        "container_uuid": {
          "description": "The UUID of the container that fulfills this container request, if any.",
          "type": "string"
        },
        "container_count_max": {
          "description": "An integer that defines the maximum number of times Arvados should attempt\nto dispatch a container to fulfill this container request.",
          "type": "integer"
        },
        "mounts": {
          "description": "A hash where each key names a directory inside this container, and its\nvalue is an object that defines the mount source for that directory. Refer\nto the [mount types reference][] for details.\n\n[mount types reference]: https://doc.arvados.org/api/methods/containers.html#mount_types\n\n",
          "type": "Hash"
        },
        "runtime_constraints": {
          "description": "A hash that identifies compute resources this container requires to run\nsuccessfully. See the [runtime constraints reference][] for details.\n\n[runtime constraints reference]: https://doc.arvados.org/api/methods/containers.html#runtime_constraints\n\n",
          "type": "Hash"
        },
        "container_image": {
          "description": "The portable data hash of the Arvados collection that contains the image\nto use for this container.",
          "type": "string"
        },
        "environment": {
          "description": "A hash of string keys and values that defines the environment variables\nfor the dispatcher to set when it executes this container.",
          "type": "Hash"
        },
        "cwd": {
          "description": "A string that the defines the working directory that the dispatcher should\nuse when it executes the command inside this container.",
          "type": "string"
        },
        "command": {
          "description": "An array of strings that defines the command that the dispatcher should\nexecute inside this container.",
          "type": "Array"
        },
        "output_path": {
          "description": "A string that defines the file or directory path where the command\nwrites output that should be saved from this container.",
          "type": "string"
        },
        "priority": {
          "description": "An integer between 0 and 1000 (inclusive) that represents this container request's\nscheduling priority. 0 represents a request to be cancelled. Higher\nvalues represent higher priority. Refer to the [priority reference][] for details.\n\n[priority reference]: https://doc.arvados.org/api/methods/container_requests.html#priority\n\n",
          "type": "integer"
        },
        "expires_at": {
          "description": "The time after which this container request will no longer be fulfilled. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "filters": {
          "description": "Filters that limit which existing containers are eligible to satisfy this\ncontainer request. This attribute is not implemented yet and should be null.",
          "type": "text"
        },
        "container_count": {
          "description": "An integer that records how many times Arvados has attempted to dispatch\na container to fulfill this container request.",
          "type": "integer"
        },
        "use_existing": {
          "description": "A boolean flag. If set, Arvados may choose to satisfy this container\nrequest with an eligible container that already exists. Otherwise, Arvados will\nsatisfy this container request with a newer container, which will usually result\nin the container running again.",
          "type": "boolean"
        },
        "scheduling_parameters": {
          "description": "A hash of scheduling parameters that should be passed to the underlying\ndispatcher when this container is run.\nSee the [scheduling parameters reference][] for details.\n\n[scheduling parameters reference]: https://doc.arvados.org/api/methods/containers.html#scheduling_parameters\n\n",
          "type": "Hash"
        },
        "output_uuid": {
          "description": "The UUID of the Arvados collection that contains output for all the\ncontainer(s) that were dispatched to fulfill this container request.",
          "type": "string"
        },
        "log_uuid": {
          "description": "The UUID of the Arvados collection that contains logs for all the\ncontainer(s) that were dispatched to fulfill this container request.",
          "type": "string"
        },
        "output_name": {
          "description": "The name to set on the output collection of this container request.",
          "type": "string"
        },
        "output_ttl": {
          "description": "An integer in seconds. If greater than zero, when an output collection is\ncreated for this container request, its `expires_at` attribute will be set this\nfar in the future.",
          "type": "integer"
        },
        "output_storage_classes": {
          "description": "An array of strings identifying the storage class(es) that should be set\non the output collection of this container request. Storage classes are configured by\nthe cluster administrator.",
          "type": "Array"
        },
        "output_properties": {
          "description": "A hash of arbitrary metadata to set on the output collection of this container request.\nSome keys may be reserved by Arvados or defined by a configured vocabulary.\nRefer to the [metadata properties reference][] for details.\n\n[metadata properties reference]: https://doc.arvados.org/api/properties.html\n\n",
          "type": "Hash"
        },
        "cumulative_cost": {
          "description": "A float with the estimated cost of all cloud instances used to run\ncontainer(s) to fulfill this container request and their subrequests.\nThe value is `0` if cost estimation is not available on this cluster.",
          "type": "float"
        },
        "output_glob": {
          "description": "An array of strings of shell-style glob patterns that define which file(s)\nand subdirectory(ies) under the `output_path` directory should be recorded in\nthe container's final output. Refer to the [glob patterns reference][] for details.\n\n[glob patterns reference]: https://doc.arvados.org/api/methods/containers.html#glob_patterns\n\n",
          "type": "Array"
        },
        "service": {
          "description": "A boolean flag. If set, it informs the system that this request is for a long-running container\nthat functions as a system service or web app, rather than a once-through batch operation.",
          "type": "boolean"
        },
        "published_ports": {
          "description": "A hash where keys are numeric TCP ports on the container which expose HTTP services.  Arvados\nwill proxy HTTP requests to these ports.  Values are hashes with the following keys:\n\n  * `\"access\"` --- One of 'private' or 'public' indicating if an Arvados API token is required to access the endpoint.\n  * `\"label\"` --- A human readable label describing the service, for display in Workbench.\n  * `\"initial_path\"` --- The relative path that should be included when constructing the URL that will be presented to the user in Workbench.",
          "type": "Hash"
        }
      }
    },
    "CredentialList": {
      "id": "CredentialList",
      "description": "A list of Credential objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#credentialList.",
          "default": "arvados#credentialList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching Credential objects.",
          "items": {
            "$ref": "Credential"
          }
        }
      }
    },
    "Credential": {
      "id": "Credential",
      "description": "Arvados credential.",
      "type": "object",
      "uuidPrefix": "oss07",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This credential's Arvados UUID, like `zzzzz-oss07-12345abcde67890`."
        },
        "owner_uuid": {
          "description": "The UUID of the user or group that owns this credential.",
          "type": "string"
        },
        "created_at": {
          "description": "The time this credential was created. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "modified_at": {
          "description": "The time this credential was last updated. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "description": "The UUID of the user that last updated this credential.",
          "type": "string"
        },
        "name": {
          "description": "The name of this credential assigned by a user.",
          "type": "string"
        },
        "description": {
          "description": "A longer HTML description of this credential assigned by a user.\nAllowed HTML tags are `a`, `b`, `blockquote`, `br`, `code`,\n`del`, `dd`, `dl`, `dt`, `em`, `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `hr`,\n`i`, `img`, `kbd`, `li`, `ol`, `p`, `pre`,\n`s`, `section`, `span`, `strong`, `sub`, `sup`, and `ul`.",
          "type": "text"
        },
        "credential_class": {
          "description": "The type of credential being stored.",
          "type": "string"
        },
        "scopes": {
          "description": "The resources the credential applies to or should be used with.",
          "type": "Array"
        },
        "external_id": {
          "description": "The non-secret external identifier associated with a credential, e.g. a username.",
          "type": "string"
        },
        "expires_at": {
          "description": "Date after which the credential_secret field is no longer valid. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        }
      }
    },
    "GroupList": {
      "id": "GroupList",
      "description": "A list of Group objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#groupList.",
          "default": "arvados#groupList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching Group objects.",
          "items": {
            "$ref": "Group"
          }
        }
      }
    },
    "Group": {
      "id": "Group",
      "description": "Arvados group\n\nGroups provide a way to organize users or data together, depending on their\n`group_class`.",
      "type": "object",
      "uuidPrefix": "j7d0g",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This group's Arvados UUID, like `zzzzz-j7d0g-12345abcde67890`."
        },
        "owner_uuid": {
          "description": "The UUID of the user or group that owns this group.",
          "type": "string"
        },
        "created_at": {
          "description": "The time this group was created. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "description": "The UUID of the user that last updated this group.",
          "type": "string"
        },
        "modified_at": {
          "description": "The time this group was last updated. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "name": {
          "description": "The name of this group assigned by a user.",
          "type": "string"
        },
        "description": {
          "description": "A longer HTML description of this group assigned by a user.\nAllowed HTML tags are `a`, `b`, `blockquote`, `br`, `code`,\n`del`, `dd`, `dl`, `dt`, `em`, `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `hr`,\n`i`, `img`, `kbd`, `li`, `ol`, `p`, `pre`,\n`s`, `section`, `span`, `strong`, `sub`, `sup`, and `ul`.",
          "type": "string"
        },
        "group_class": {
          "description": "A string representing which type of group this is. One of:\n\n  * `\"filter\"` --- A virtual project whose contents are selected dynamically by filters.\n  * `\"project\"` --- An Arvados project that can contain collections,\n    container records, workflows, and subprojects.\n  * `\"role\"` --- A group of users that can be granted permissions in Arvados.\n\n",
          "type": "string"
        },
        "trash_at": {
          "description": "The time this group will be trashed. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "is_trashed": {
          "description": "A boolean flag to indicate whether or not this group is trashed.",
          "type": "boolean"
        },
        "delete_at": {
          "description": "The time this group will be permanently deleted. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "properties": {
          "description": "A hash of arbitrary metadata for this group.\nSome keys may be reserved by Arvados or defined by a configured vocabulary.\nRefer to the [metadata properties reference][] for details.\n\n[metadata properties reference]: https://doc.arvados.org/api/properties.html\n\n",
          "type": "Hash"
        },
        "frozen_by_uuid": {
          "description": "The UUID of the user that has frozen this group, if any. Frozen projects\ncannot have their contents or metadata changed, even by admins.",
          "type": "string"
        }
      }
    },
    "KeepServiceList": {
      "id": "KeepServiceList",
      "description": "A list of KeepService objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#keepServiceList.",
          "default": "arvados#keepServiceList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching KeepService objects.",
          "items": {
            "$ref": "KeepService"
          }
        }
      }
    },
    "KeepService": {
      "id": "KeepService",
      "description": "Arvados Keep service\n\nThis resource stores information about a single Keep service in this Arvados\ncluster that clients can contact to retrieve and store data.",
      "type": "object",
      "uuidPrefix": "bi6l4",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This Keep service's Arvados UUID, like `zzzzz-bi6l4-12345abcde67890`."
        },
        "owner_uuid": {
          "description": "The UUID of the user or group that owns this Keep service.",
          "type": "string"
        },
        "modified_by_user_uuid": {
          "description": "The UUID of the user that last updated this Keep service.",
          "type": "string"
        },
        "modified_at": {
          "description": "The time this Keep service was last updated. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "service_host": {
          "description": "The DNS hostname of this Keep service.",
          "type": "string"
        },
        "service_port": {
          "description": "The TCP port where this Keep service listens.",
          "type": "integer"
        },
        "service_ssl_flag": {
          "description": "A boolean flag that indicates whether or not this Keep service uses TLS/SSL.",
          "type": "boolean"
        },
        "service_type": {
          "description": "A string that describes which type of Keep service this is. One of:\n\n  * `\"disk\"` --- A service that stores blocks on a local filesystem.\n  * `\"blob\"` --- A service that stores blocks in a cloud object store.\n  * `\"proxy\"` --- A keepproxy service.\n\n",
          "type": "string"
        },
        "created_at": {
          "description": "The time this Keep service was created. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "read_only": {
          "description": "A boolean flag. If set, this Keep service does not accept requests to write data\nblocks; it only serves blocks it already has.",
          "type": "boolean"
        }
      }
    },
    "LinkList": {
      "id": "LinkList",
      "description": "A list of Link objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#linkList.",
          "default": "arvados#linkList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching Link objects.",
          "items": {
            "$ref": "Link"
          }
        }
      }
    },
    "Link": {
      "id": "Link",
      "description": "Arvados object link\n\nA link provides a way to define relationships between Arvados objects,\ndepending on their `link_class`.",
      "type": "object",
      "uuidPrefix": "o0j2j",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This link's Arvados UUID, like `zzzzz-o0j2j-12345abcde67890`."
        },
        "owner_uuid": {
          "description": "The UUID of the user or group that owns this link.",
          "type": "string"
        },
        "created_at": {
          "description": "The time this link was created. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "description": "The UUID of the user that last updated this link.",
          "type": "string"
        },
        "modified_at": {
          "description": "The time this link was last updated. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "tail_uuid": {
          "description": "The UUID of the Arvados object that is the target of this relationship.",
          "type": "string"
        },
        "link_class": {
          "description": "A string that defines which kind of link this is. One of:\n\n  * `\"permission\"` --- This link grants a permission to the user or group\n    referenced by `head_uuid` to the object referenced by `tail_uuid`. The\n    access level is set by `name`.\n  * `\"star\"` --- This link represents a \"favorite.\" The user referenced\n    by `head_uuid` wants quick access to the object referenced by `tail_uuid`.\n  * `\"tag\"` --- This link represents an unstructured metadata tag. The object\n    referenced by `tail_uuid` has the tag defined by `name`.\n\n",
          "type": "string"
        },
        "name": {
          "description": "The primary value of this link. For `\"permission\"` links, this is one of\n`\"can_read\"`, `\"can_write\"`, or `\"can_manage\"`.",
          "type": "string"
        },
        "head_uuid": {
          "description": "The UUID of the Arvados object that is the originator or actor in this\nrelationship. May be null.",
          "type": "string"
        },
        "properties": {
          "description": "A hash of arbitrary metadata for this link.\nSome keys may be reserved by Arvados or defined by a configured vocabulary.\nRefer to the [metadata properties reference][] for details.\n\n[metadata properties reference]: https://doc.arvados.org/api/properties.html\n\n",
          "type": "Hash"
        }
      }
    },
    "LogList": {
      "id": "LogList",
      "description": "A list of Log objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#logList.",
          "default": "arvados#logList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching Log objects.",
          "items": {
            "$ref": "Log"
          }
        }
      }
    },
    "Log": {
      "id": "Log",
      "description": "Arvados log record\n\nThis resource represents a single log record about an event in this Arvados\ncluster. Some individual Arvados services create log records. Users can also\ncreate custom logs.",
      "type": "object",
      "uuidPrefix": "57u5n",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "id": {
          "description": "The serial number of this log. You can use this in filters to query logs\nthat were created before/after another.",
          "type": "integer"
        },
        "uuid": {
          "type": "string",
          "description": "This log's Arvados UUID, like `zzzzz-57u5n-12345abcde67890`."
        },
        "owner_uuid": {
          "description": "The UUID of the user or group that owns this log.",
          "type": "string"
        },
        "modified_by_user_uuid": {
          "description": "The UUID of the user that last updated this log.",
          "type": "string"
        },
        "object_uuid": {
          "description": "The UUID of the Arvados object that this log pertains to, such as a user\nor container.",
          "type": "string"
        },
        "event_at": {
          "description": " The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "event_type": {
          "description": "An arbitrary short string that classifies what type of log this is.",
          "type": "string"
        },
        "summary": {
          "description": "A text string that describes the logged event. This is the primary\nattribute for simple logs.",
          "type": "text"
        },
        "properties": {
          "description": "A hash of arbitrary metadata for this log.\nSome keys may be reserved by Arvados or defined by a configured vocabulary.\nRefer to the [metadata properties reference][] for details.\n\n[metadata properties reference]: https://doc.arvados.org/api/properties.html\n\n",
          "type": "Hash"
        },
        "created_at": {
          "description": "The time this log was created. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "modified_at": {
          "description": "The time this log was last updated. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "object_owner_uuid": {
          "description": "The `owner_uuid` of the object referenced by `object_uuid` at the time\nthis log was created.",
          "type": "string"
        }
      }
    },
    "UserList": {
      "id": "UserList",
      "description": "A list of User objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#userList.",
          "default": "arvados#userList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching User objects.",
          "items": {
            "$ref": "User"
          }
        }
      }
    },
    "User": {
      "id": "User",
      "description": "Arvados user\n\nA user represents a single individual or role who may be authorized to access\nthis Arvados cluster.",
      "type": "object",
      "uuidPrefix": "tpzed",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This user's Arvados UUID, like `zzzzz-tpzed-12345abcde67890`."
        },
        "owner_uuid": {
          "description": "The UUID of the user or group that owns this user.",
          "type": "string"
        },
        "created_at": {
          "description": "The time this user was created. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "description": "The UUID of the user that last updated this user.",
          "type": "string"
        },
        "modified_at": {
          "description": "The time this user was last updated. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "email": {
          "description": "This user's email address.",
          "type": "string"
        },
        "first_name": {
          "description": "This user's first name.",
          "type": "string"
        },
        "last_name": {
          "description": "This user's last name.",
          "type": "string"
        },
        "identity_url": {
          "description": "A URL that represents this user with the cluster's identity provider.",
          "type": "string"
        },
        "is_admin": {
          "description": "A boolean flag. If set, this user is an administrator of the Arvados\ncluster, and automatically passes most permissions checks.",
          "type": "boolean"
        },
        "prefs": {
          "description": "A hash that stores cluster-wide user preferences.",
          "type": "Hash"
        },
        "is_active": {
          "description": "A boolean flag. If unset, this user is not permitted to make any Arvados\nAPI requests.",
          "type": "boolean"
        },
        "username": {
          "description": "This user's Unix username on virtual machines.",
          "type": "string"
        }
      }
    },
    "UserAgreementList": {
      "id": "UserAgreementList",
      "description": "A list of UserAgreement objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#userAgreementList.",
          "default": "arvados#userAgreementList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching UserAgreement objects.",
          "items": {
            "$ref": "UserAgreement"
          }
        }
      }
    },
    "UserAgreement": {
      "id": "UserAgreement",
      "description": "Arvados user agreement\n\nA user agreement is a collection with terms that users must agree to before\nthey can use this Arvados cluster.",
      "type": "object",
      "uuidPrefix": "gv0sa",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "owner_uuid": {
          "description": "The UUID of the user or group that owns this user agreement.",
          "type": "string"
        },
        "created_at": {
          "description": "The time this user agreement was created. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "description": "The UUID of the user that last updated this user agreement.",
          "type": "string"
        },
        "modified_at": {
          "description": "The time this user agreement was last updated. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "portable_data_hash": {
          "description": "The portable data hash of this user agreement. This string provides a unique\nand stable reference to these contents.",
          "type": "string"
        },
        "replication_desired": {
          "description": "The number of copies that should be made for data in this user agreement.",
          "type": "integer"
        },
        "replication_confirmed_at": {
          "description": "The last time the cluster confirmed that it met `replication_confirmed`\nfor this user agreement. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "replication_confirmed": {
          "description": "The number of copies of data in this user agreement that the cluster has confirmed\nexist in storage.",
          "type": "integer"
        },
        "uuid": {
          "type": "string",
          "description": "This user agreement's Arvados UUID, like `zzzzz-gv0sa-12345abcde67890`."
        },
        "manifest_text": {
          "description": "The manifest text that describes how files are constructed from data blocks\nin this user agreement. Refer to the [manifest format][] reference for details.\n\n[manifest format]: https://doc.arvados.org/architecture/manifest-format.html\n\n",
          "type": "text"
        },
        "name": {
          "description": "The name of this user agreement assigned by a user.",
          "type": "string"
        },
        "description": {
          "description": "A longer HTML description of this user agreement assigned by a user.\nAllowed HTML tags are `a`, `b`, `blockquote`, `br`, `code`,\n`del`, `dd`, `dl`, `dt`, `em`, `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `hr`,\n`i`, `img`, `kbd`, `li`, `ol`, `p`, `pre`,\n`s`, `section`, `span`, `strong`, `sub`, `sup`, and `ul`.",
          "type": "string"
        },
        "properties": {
          "description": "A hash of arbitrary metadata for this user agreement.\nSome keys may be reserved by Arvados or defined by a configured vocabulary.\nRefer to the [metadata properties reference][] for details.\n\n[metadata properties reference]: https://doc.arvados.org/api/properties.html\n\n",
          "type": "Hash"
        },
        "delete_at": {
          "description": "The time this user agreement will be permanently deleted. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "trash_at": {
          "description": "The time this user agreement will be trashed. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "is_trashed": {
          "description": "A boolean flag to indicate whether or not this user agreement is trashed.",
          "type": "boolean"
        },
        "storage_classes_desired": {
          "description": "An array of strings identifying the storage class(es) that should be used\nfor data in this user agreement. Storage classes are configured by the cluster administrator.",
          "type": "Array"
        },
        "storage_classes_confirmed": {
          "description": "An array of strings identifying the storage class(es) the cluster has\nconfirmed have a copy of this user agreement's data.",
          "type": "Array"
        },
        "storage_classes_confirmed_at": {
          "description": "The last time the cluster confirmed that data was stored on the storage\nclass(es) in `storage_classes_confirmed`. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "current_version_uuid": {
          "description": "The UUID of the current version of this user agreement.",
          "type": "string"
        },
        "version": {
          "description": "An integer that counts which version of a user agreement this record\nrepresents. Refer to [collection versioning][] for details. This attribute is\nread-only.\n\n[collection versioning]: https://doc.arvados.org/user/topics/collection-versioning.html\n\n",
          "type": "integer"
        },
        "preserve_version": {
          "description": "A boolean flag to indicate whether this specific version of this user agreement\nshould be persisted in cluster storage.",
          "type": "boolean"
        },
        "file_count": {
          "description": "The number of files represented in this user agreement's `manifest_text`.\nThis attribute is read-only.",
          "type": "integer"
        },
        "file_size_total": {
          "description": "The total size in bytes of files represented in this user agreement's `manifest_text`.\nThis attribute is read-only.",
          "type": "integer"
        }
      }
    },
    "VirtualMachineList": {
      "id": "VirtualMachineList",
      "description": "A list of VirtualMachine objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#virtualMachineList.",
          "default": "arvados#virtualMachineList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching VirtualMachine objects.",
          "items": {
            "$ref": "VirtualMachine"
          }
        }
      }
    },
    "VirtualMachine": {
      "id": "VirtualMachine",
      "description": "Arvados virtual machine (\"shell node\")\n\nThis resource stores information about a virtual machine or \"shell node\"\nhosted on this Arvados cluster where users can log in and use preconfigured\nArvados client tools.",
      "type": "object",
      "uuidPrefix": "2x53u",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This virtual machine's Arvados UUID, like `zzzzz-2x53u-12345abcde67890`."
        },
        "owner_uuid": {
          "description": "The UUID of the user or group that owns this virtual machine.",
          "type": "string"
        },
        "modified_by_user_uuid": {
          "description": "The UUID of the user that last updated this virtual machine.",
          "type": "string"
        },
        "modified_at": {
          "description": "The time this virtual machine was last updated. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "hostname": {
          "description": "The DNS hostname where users should access this virtual machine.",
          "type": "string"
        },
        "created_at": {
          "description": "The time this virtual machine was created. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        }
      }
    },
    "WorkflowList": {
      "id": "WorkflowList",
      "description": "A list of Workflow objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#workflowList.",
          "default": "arvados#workflowList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching Workflow objects.",
          "items": {
            "$ref": "Workflow"
          }
        }
      }
    },
    "Workflow": {
      "id": "Workflow",
      "description": "Arvados workflow\n\nA workflow contains workflow definition source code that Arvados can execute\nalong with associated metadata for users.",
      "type": "object",
      "uuidPrefix": "7fd4e",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This workflow's Arvados UUID, like `zzzzz-7fd4e-12345abcde67890`."
        },
        "owner_uuid": {
          "description": "The UUID of the user or group that owns this workflow.",
          "type": "string"
        },
        "created_at": {
          "description": "The time this workflow was created. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "modified_at": {
          "description": "The time this workflow was last updated. The string encodes a UTC date and time in ISO 8601 format.",
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "description": "The UUID of the user that last updated this workflow.",
          "type": "string"
        },
        "name": {
          "description": "The name of this workflow assigned by a user.",
          "type": "string"
        },
        "description": {
          "description": "A longer HTML description of this workflow assigned by a user.\nAllowed HTML tags are `a`, `b`, `blockquote`, `br`, `code`,\n`del`, `dd`, `dl`, `dt`, `em`, `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `hr`,\n`i`, `img`, `kbd`, `li`, `ol`, `p`, `pre`,\n`s`, `section`, `span`, `strong`, `sub`, `sup`, and `ul`.",
          "type": "text"
        },
        "definition": {
          "description": "A string with the CWL source of this workflow.",
          "type": "text"
        },
        "collection_uuid": {
          "description": "The collection this workflow is linked to, containing the definition of the workflow.",
          "type": "string"
        }
      }
    }
  },
  "servicePath": "arvados/v1/",
  "title": "Arvados API",
  "version": "v1"
}