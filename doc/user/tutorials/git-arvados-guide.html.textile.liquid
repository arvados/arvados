---
layout: default
navsection: userguide
title: Working with an Arvados git repository
...
{% comment %}
Copyright (C) The Arvados Authors. All rights reserved.

SPDX-License-Identifier: CC-BY-SA-3.0
{% endcomment %}

This tutorial describes how to work with an Arvados-managed git repository. Working with an Arvados git repository is very similar to working with other public git repositories.

{% include 'tutorial_expectations' %}

{% include 'tutorial_git_repo_expectations' %}

h2. Cloning a git repository

Before you start using Git, you should do some basic configuration (you only need to do this the first time):

<notextile>
<pre><code>~$ <span class="userinput">git config --global user.name "Your Name"</span>
~$ <span class="userinput">git config --global user.email $USER@example.com</span></code></pre>
</notextile>

On the Arvados Workbench, click on the dropdown menu icon <i class="fa fa-lg fa-user"></i> in the upper right corner of the top navigation menu to access the Account Management menu, and click on the menu item *Repositories*. In the *Repositories* page, you should see the @$USER/tutorial@ repository listed in the *name* column.  Next to *name* is the column *URL*. Copy the *URL* value associated with your repository.  This should look like <notextile><code>https://git.{{ site.arvados_api_host }}/$USER/tutorial.git</code></notextile>. Alternatively, you can use <notextile><code>git@git.{{ site.arvados_api_host }}:$USER/tutorial.git</code></notextile>

Next, on the Arvados virtual machine, clone your Git repository:

<notextile>
<pre><code>~$ <span class="userinput">cd $HOME</span> # (or wherever you want to install)
~$ <span class="userinput">git clone https://git.{{ site.arvados_api_host }}/$USER/tutorial.git</span>
Cloning into 'tutorial'...</code></pre>
</notextile>

This will create a Git repository in the directory called @tutorial@ in your home directory. Say yes when prompted to continue with connection.
Ignore any warning that you are cloning an empty repository.

*Note:* If you are prompted for username and password when you try to git clone using this command, you may first need to update your git configuration. Execute the following commands to update your git configuration.

<notextile>
<pre>
<code>~$ <span class="userinput">git config 'credential.https://git.{{ site.arvados_api_host }}/.username' none</span></code>
<code>~$ <span class="userinput">git config 'credential.https://git.{{ site.arvados_api_host }}/.helper' '!cred(){ cat >/dev/null; if [ "$1" = get ]; then echo password=$ARVADOS_API_TOKEN; fi; };cred'</span></code>
</pre>
</notextile>

h2. Creating a git branch in an Arvados repository

Create a git branch named *tutorial_branch* in the *tutorial* Arvados git repository.

<notextile>
<pre><code>~$ <span class="userinput">cd tutorial</span>
~/tutorial$ <span class="userinput">git checkout -b tutorial_branch</span>
</code></pre>
</notextile>

h2. Adding scripts to an Arvados repository

A git repository is a good place to store the CWL workflows that you run on Arvados.

First, create a simple CWL CommandLineTool:

notextile. <pre>~/tutorials$ <code class="userinput">nano hello.cwl</code></pre>

<notextile> {% code tutorial_hello_cwl as yaml %} </notextile>

Next, add the file to the git repository.  This tells @git@ that the file should be included on the next commit.

notextile. <pre><code>~/tutorial$ <span class="userinput">git add hello.cwl</span></code></pre>

Next, commit your changes.  All staged changes are recorded into the local git repository:

<notextile>
<pre><code>~/tutorial$ <span class="userinput">git commit -m "my first script"</span>
</code></pre>
</notextile>

Finally, upload your changes to the remote repository:

<notextile>
<pre><code>~/tutorial/crunch_scripts$ <span class="userinput">git push origin tutorial_branch</span>
</code></pre>
</notextile>

The same steps can be used to add any of your custom bash, R, or python scripts to an Arvados repository.
