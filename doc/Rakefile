#!/usr/bin/env rake
# Copyright (C) The Arvados Authors. All rights reserved.
#
# SPDX-License-Identifier: CC-BY-SA-3.0

# As a convenience to the documentation writer, you can touch a file
# called 'no-sdk' in the 'doc' directory and it will suppress
# generating the documentation for the SDKs, which (the R docs
# especially) take a fair bit of time and slow down the edit-preview
# cycle.
#
# To generate and view the documentation locally, run this command
#
#   rake && sensible-browser .site/index.html
#
# Or alternatively:
#
#   baseurl=http://localhost:8000 rake && rake run
#
# and then visit http://localhost:8000 in a browser.

require "rubygems"
require "colorize"

module Zenweb
  class Site
    @binary_files = %w[png jpg gif eot svg ttf woff2? ico pdf m4a t?gz xlsx]
  end
end

task :generate => [ :realclean, 'sdk/python/arvados.html', 'sdk/R/arvados/index.html', 'sdk/java-v2/javadoc/index.html' ] do
  vars = ['baseurl', 'arvados_cluster_uuid', 'arvados_api_host', 'arvados_workbench_host']
  if ! ENV.key?('baseurl') || ENV['baseurl'] == ""
    if !ENV.key?('WORKSPACE') || ENV['WORKSPACE'] == ""
      puts "The `baseurl` variable was not specified and the `WORKSPACE` environment variable is not set. Defaulting `baseurl` to file://#{pwd}/.site"
      ENV['baseurl'] = "file://#{pwd}/.site/"
    else
      puts "The `baseurl` variable was not specified, defaulting to a value derived from the `WORKSPACE` environment variable"
      ENV['baseurl'] = "file://#{ENV['WORKSPACE']}/doc/.site/"
    end
  end
  vars.each do |v|
    if ENV[v]
      website.config.h[v] = ENV[v]
    end
  end
end

file ["install/new_cluster_checklist_Azure.xlsx", "install/new_cluster_checklist_AWS.xlsx"] do |t|
  cp(t, t)
end

file "sdk/python/arvados.html" do |t|
  if ENV['NO_SDK'] || File.exist?("no-sdk")
    next
  end
  # pysdk_pdoc.py is a wrapper around the pdoc CLI. `which pdoc` is an easy
  # and good-enough test to check whether it's installed at all.
  `which pdoc`
  if $? == 0
    raise unless system("python3", "setup.py", "build",
                        chdir: "../sdk/python", out: :err)
    raise unless system("python3", "pysdk_pdoc.py",
                        out: :err)
  else
    puts "Warning: pdoc not found, Python documentation will not be generated".colorize(:light_red)
  end
end

file "sdk/R/arvados/index.html" do |t|
  if ENV['NO_SDK'] || File.exist?("no-sdk")
    next
  end
  `which R`
  if $? == 0
    tgt = Dir.pwd
    Dir.mkdir("sdk/R")
    Dir.mkdir("sdk/R/arvados")
    puts("tgt", tgt)
    cp('css/R.css', 'sdk/R/arvados')
    docfiles = []
    Dir.chdir("../sdk/R/") do
      Dir.entries("man").each do |rd|
        if rd[-3..-1] == ".Rd"
          htmlfile = "#{rd[0..-4]}.html"
          `R CMD Rdconv -t html man/#{rd} > #{tgt}/sdk/R/arvados/#{htmlfile}`
          docfiles << htmlfile
        end
      end
    end
    raise if $? != 0

    File.open("../sdk/R/README.md", "r") do |rd|
    File.open("sdk/R/index.html.md", "w") do |fn|
      fn.write(<<-EOF
---
layout: default
navsection: sdk
navmenu: R
title: "R SDK Overview"
...

#{rd.read}
EOF
              )
      end
    end

    File.open("sdk/R/arvados/index.html.textile.liquid", "w") do |fn|
      fn.write(<<-EOF
---
layout: default
navsection: sdk
navmenu: R
title: "R Reference"
...
{% comment %}
Copyright (C) The Arvados Authors. All rights reserved.

SPDX-License-Identifier: CC-BY-SA-3.0
{% endcomment %}

EOF
              )

      docfiles.sort.each do |d|
        fn.write("* \"#{d[0..-6]}\":#{d}\n")
      end

    end
  else
    puts "Warning: R not found, R documentation will not be generated".colorize(:light_red)
  end
end

file "sdk/java-v2/javadoc/index.html" do |t|
  if ENV['NO_SDK'] || File.exist?("no-sdk")
    next
  end
  `which java`
  if $? == 0
    `which gradle`
    if $? != 0
      puts "Warning: gradle not found, java sdk documentation will not be generated".colorize(:light_red)
    else
      tgt = Dir.pwd
      docfiles = []
      Dir.chdir("../sdk/java-v2") do
        STDERR.puts `gradle javadoc 2>&1`
        raise if $? != 0
        puts `sed -i "s/@import.*dejavu.css.*//g" build/docs/javadoc/stylesheet.css`
        raise if $? != 0
      end
      cp_r("../sdk/java-v2/build/docs/javadoc", "sdk/java-v2")
      raise if $? != 0
    end
  else
    puts "Warning: java not found, java sdk documentation will not be generated".colorize(:light_red)
  end
end

task :linkchecker => [ :generate ] do
  Dir.chdir(".site") do
    `which linkchecker`
    if $? == 0
      # we need --check-extern to check relative links, weird but true
      system "linkchecker index.html --check-extern --ignore-url='!file://'" or exit $?.exitstatus
    else
      puts "Warning: linkchecker not found, skipping run".colorize(:light_red)
    end
  end
end

task :import_vscode_training do
  Dir.chdir("user") do
  rm_rf "arvados-vscode-cwl-training"
  `git clone https://github.com/arvados/arvados-vscode-cwl-training`
  githash = `git --git-dir arvados-vscode-cwl-training/.git log -n1 --format=%H HEAD`
  File.open("cwl/arvados-vscode-training.html.md.liquid", "w") do |fn|
    File.open("arvados-vscode-cwl-training/README.md", "r") do |rd|
      fn.write(<<-EOF
---
layout: default
navsection: userguide
title: "Developing CWL Workflows with VSCode"
...
{% comment %}
Copyright (C) The Arvados Authors. All rights reserved.

SPDX-License-Identifier: CC-BY-SA-3.0

Imported from https://github.com/arvados/arvados-vscode-cwl-training
git hash: #{githash}
{% endcomment %}

EOF
              )
               fn.write(rd.read())
    end
  end
  rm_rf "arvados-vscode-cwl-training"
  end
end

task :clean do
  rm_rf "sdk/python/arvados"
  rm_f "sdk/python/arvados.html"
  rm_f "sdk/python/index.html"
  rm_rf "sdk/R"
  rm_rf "sdk/java-v2/javadoc"
end

require "zenweb/tasks"
load "zenweb-textile.rb"
load "zenweb-liquid.rb"
load "zenweb-fix-body.rb"

task :extra_wirings do
  $website.pages["sdk/python/python.html.textile.liquid"].depends_on("sdk/python/arvados.html")
end
